{"version":3,"sources":["../../src/Components/AcceptButton.js","../../src/Components/ReadMoreButton.js","../../src/Components/CookieIcon.js","../../src/Components/CookieText.js","../../src/Components/CookieNotice.js","App.js","index.js"],"names":["Button","styled","AcceptButton","render","this","label","onButtonClick","className","onClick","React","Component","ReadMoreButton","computeOpenInNewTab","openInNewTab","link","href","target","Icon","CookieIcon","Label","CookieText","Root","StickToBottom","Wrapper","props","ButtonsWrapper","CookieNotice","cookieValue","Cookies","cookiesAllowed","setCookie","computeReverseButtons","reverseButtons","acceptButtonLabel","readMoreButtonLabel","readMoreButtonLink","cookieTextLabel","borderRadius","marginSide","justifyContent","shouldReverseButtons","buttons","key","classnames","App","ReactDOM","document","getElementById"],"mappings":"o0CAKA,IAAMA,EAASC,IAAH,YA2CSC,c,4EACnBC,kBAAS,MAC0BC,KAD1B,MACCC,EADD,QACQC,EADR,gBAGP,OACE,qBAAQC,UAAR,gBAAkCC,QAASF,GACzC,8BAAOD,GAFX,Y,EAJiBH,CAAqBO,IAAMC,W,4fC3ChD,IAAMV,EAASC,IAAH,OAiCSU,c,oFACnBC,+BAA0C,IAChCC,EAAiBT,KADe,mBAGxC,2BAAWS,GAIJA,EAHL,SAGF,S,EAGFV,kBAAS,MACiBC,KADjB,MACCC,EADD,QACQS,EADR,OAGP,OACE,qBACEP,UADF,mBAEEQ,KAAMD,GAFR,2BAGEE,OAAQZ,KAAKQ,uBAEZP,GANL,c,EAdiBM,CAAuBF,IAAMC,W,oICjClD,IAAMO,EAAOhB,IAAH,SASWiB,c,4EACnBf,kBACE,OAAO,qBAAMI,UAAU,iB,EAFNW,CAAmBT,IAAMC,W,gKCT9C,IAAMS,EAAQlB,IAAH,UAaUmB,c,4EACnBjB,kBAAS,IACCE,EAAUD,KADX,YAGP,OACE,qBAAOG,UAAU,eACdF,GAFL,mE,EAJiBe,CAAmBX,IAAMC,W,qxBCP9C,IAAMW,EAAOpB,IAAH,SASJqB,EAAgBrB,IAAH,SAQbsB,EAAUtB,IAAH,SAEQ,mBAAWuB,EAAX,kBAIP,mBAAWA,EAAX,cAGK,mBAAWA,EAAX,gBAGH,mBAAWA,aAAX,OAIVC,EAAiBxB,IAAH,S,EAqBCyB,YACnB,cAA0B,MACxB,uBAEA,IAAMC,EAAN,SAAoBC,yBAHI,OAKxB,QAAa,CAAEC,eAAgBF,GALP,E,kCAQ1BG,qBACEF,gCAEAxB,KAAA,SAAc,CAAEyB,gBAAgB,K,EAGlCE,iCAAiC,IACvBC,EAAmB5B,KADI,qBAG/B,2BAAW4B,GAIX,G,EAGF7B,kBAAS,aAUHC,KAVG,MAEL6B,EAFK,oBAGLC,EAHK,sBAILC,EAJK,qBAKLtB,EALK,eAMLuB,EANK,kBAOLC,EAPK,eAQLC,EARK,aASLC,EATK,iBAYCV,EAAmBzB,KAZpB,qBAcDoC,EAAuBpC,KAA7B,wBAEMqC,EAAU,CACd,qBACEC,IADF,gBAEErC,MAFF,EAGEC,cAAe,kBAAM,EAAN,eAEjB,qBACEoC,IADF,mBAEErC,MAFF,EAGES,KAHF,EAIED,aAAcA,KAIlB,OACE,qBACEN,UAAWoC,IAAW,qBAAsB,CAC1C,kBAAmBd,KAGrB,qBAAetB,UAAU,mBACvB,qBACEA,UADF,UAEE8B,aAAcA,GAFhB,GAGEC,WAAYA,GAHd,GAIEC,eAAgBA,GAAkB,iBAElC,oBANF,MAOE,qBAAYlC,MAAO+B,IACnB,qBAAgB7B,UAAU,mBACvBiC,EAAuBC,EAAH,UAhB/B,O,EAvDiBf,CAAqBjB,IAAMC,WC1DjCkC,MAJH,IACH,kBAAC,EAAD,MCETC,IAAS1C,OAAO,kBAAC,EAAD,MAAS2C,SAASC,eAAe,W","file":"static/js/main.99fae777.chunk.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  border-style: none;\n  color: #1d1148;\n  width: max-content;\n  font-size: 16px;\n  background: #ffffff;\n  border-radius: 24px;\n  padding: 12px 24px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 0.5s ease 0s;\n  cursor: pointer;\n\n  &:hover {\n    color: #1d1148;\n    background: #ffffff;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  }\n\n  &:active {\n    box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2),\n      0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  }\n\n  &:focus {\n    outline: 0;\n  }\n\n  &:not(:first-child) {\n    margin-left: 8px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`\n\ntype Props = {|\n  label?: string,\n  onButtonClick: () => void,\n|}\n\nexport default class AcceptButton extends React.Component<Props> {\n  render() {\n    const { label, onButtonClick } = this.props\n\n    return (\n      <Button className='accept-button' onClick={onButtonClick}>\n        <span>{label || 'Accept'}</span>\n      </Button>\n    )\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.a`\n  font-size: 16px;\n  height: auto;\n  color: #8c97a1;\n  padding: 10px 18px;\n  border: 1px solid #e0e2e4;\n  border-radius: 24px;\n  box-shadow: none;\n  text-decoration: none;\n  white-space: nowrap;\n  transition: all 0.5s ease 0s;\n\n  &:hover {\n    color: #1d1148;\n    border-color: #1d1148;\n    background: #ffffff;\n  }\n\n  &:not(:first-child) {\n    margin-left: 8px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`\n\ntype Props = {|\n  label?: string,\n  link?: string,\n  openInNewTab?: boolean,\n|}\n\nexport default class ReadMoreButton extends React.Component<Props> {\n  computeOpenInNewTab(): '_blank' | '_self' {\n    const { openInNewTab } = this.props\n\n    if (typeof openInNewTab === 'undefined') {\n      return '_blank'\n    }\n\n    return openInNewTab ? '_blank' : '_self'\n  }\n\n  render() {\n    const { label, link } = this.props\n\n    return (\n      <Button\n        className='read-more-button'\n        href={link || 'http://aboutcookies.org/'}\n        target={this.computeOpenInNewTab()}\n      >\n        {label || 'Read more'}\n      </Button>\n    )\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Icon = styled.div`\n  &:before {\n    content: 'üç™';\n    font-size: 32px;\n  }\n`\n\ntype Props = {||}\n\nexport default class CookieIcon extends React.Component<Props> {\n  render() {\n    return <Icon className='cookie-icon' />\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.span`\n  font-size: 16px;\n  margin: 0 20px;\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`\n\ntype Props = {|\n  label?: string,\n|}\n\nexport default class CookieText extends React.Component<Props> {\n  render() {\n    const { label } = this.props\n\n    return (\n      <Label className='cookie-text'>\n        {label ||\n          'This website uses cookies to improve your browsing experience.'}\n      </Label>\n    )\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport classnames from 'classnames'\nimport styled from 'styled-components'\nimport Cookies from 'js-cookie'\nimport AcceptButton from './AcceptButton'\nimport ReadMoreButton from './ReadMoreButton'\nimport CookieIcon from './CookieIcon'\nimport CookieText from './CookieText'\n\nconst Root = styled.div`\n  opacity: 1;\n  transition: opacity 0.5s linear;\n\n  &.cookies-allowed {\n    opacity: 0;\n  }\n`\n\nconst StickToBottom = styled.div`\n  position: fixed;\n  left: 0px;\n  bottom: 0px;\n  width: 100%;\n  z-index: 1201;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: ${(props) => props.justifyContent};\n  align-items: center;\n  opacity: 1;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 24px 32px, rgba(0, 0, 0, 0.1) 0px 8px 32px;\n  margin: 0 ${(props) => props.marginSide}px 48px;\n  background: #ffffff;\n  padding: 16px;\n  border-radius: ${(props) => props.borderRadius}px;\n\n  @media (max-width: 768px) {\n    margin: 0 ${(props) => props.marginSide / 2.5}px 48px;\n  }\n`\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\ntype Props = {|\n  acceptButtonLabel?: string,\n  readMoreButtonLabel?: string,\n  readMoreButtonLink?: string,\n  openInNewTab?: boolean,\n  cookieTextLabel?: string,\n  reverseButtons?: boolean,\n  borderRadius?: number,\n  marginSide?: number,\n  justifyContent?: 'space-around' | 'space-between',\n|}\n\ntype State = {|\n  cookiesAllowed: boolean,\n|}\n\nexport default class CookieNotice extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    const cookieValue = Cookies.get('allow-cookies') === 'true'\n\n    this.state = { cookiesAllowed: cookieValue }\n  }\n\n  setCookie() {\n    Cookies.set('allow-cookies', 'true')\n\n    this.setState({ cookiesAllowed: true })\n  }\n\n  computeReverseButtons(): boolean {\n    const { reverseButtons } = this.props\n\n    if (typeof reverseButtons === 'undefined') {\n      return false\n    }\n\n    return reverseButtons\n  }\n\n  render() {\n    const {\n      acceptButtonLabel,\n      readMoreButtonLabel,\n      readMoreButtonLink,\n      openInNewTab,\n      cookieTextLabel,\n      borderRadius,\n      marginSide,\n      justifyContent,\n    } = this.props\n\n    const { cookiesAllowed } = this.state\n\n    const shouldReverseButtons = this.computeReverseButtons()\n\n    const buttons = [\n      <AcceptButton\n        key='accept-button'\n        label={acceptButtonLabel}\n        onButtonClick={() => this.setCookie()}\n      />,\n      <ReadMoreButton\n        key='read-more-button'\n        label={readMoreButtonLabel}\n        link={readMoreButtonLink}\n        openInNewTab={openInNewTab}\n      />,\n    ]\n\n    return (\n      <Root\n        className={classnames('cookie-notice-root', {\n          'cookies-allowed': cookiesAllowed,\n        })}\n      >\n        <StickToBottom className='stick-to-bottom'>\n          <Wrapper\n            className='wrapper'\n            borderRadius={borderRadius || 32}\n            marginSide={marginSide || 80}\n            justifyContent={justifyContent || 'space-between'}\n          >\n            <CookieIcon />\n            <CookieText label={cookieTextLabel} />\n            <ButtonsWrapper className='buttons-wrapper'>\n              {shouldReverseButtons ? buttons.reverse() : buttons}\n            </ButtonsWrapper>\n          </Wrapper>\n        </StickToBottom>\n      </Root>\n    )\n  }\n}\n","import React from 'react'\nimport CookieNotice from 'react-cookienotice'\n\nconst App = () => {\n  return <CookieNotice  />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}