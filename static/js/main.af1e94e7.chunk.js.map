{"version":3,"sources":["../../src/Components/AcceptButton.js","../../src/Components/ReadMoreButton.js","../../src/Components/CookieIcon.js","../../src/Components/CookieText.js","../../src/Validator/validator.js","../../src/Components/CookieNotice.js","App.js","index.js"],"names":["Button","styled","AcceptButton","render","this","label","onButtonClick","className","onClick","React","Component","ReadMoreButton","link","openInNewTab","href","target","Icon","CookieIcon","Label","CookieText","validateReadMoreButtonLabel","parameter","validateReadMoreButtonLink","Error","validateOpenInNewTab","validateCookieTextLabel","validateBorderRadius","validateJustifyContent","validateMaxWidth","Root","StickToBottom","Wrapper","ButtonsWrapper","CookieNotice","cookieValue","Cookies","cookiesAllowed","setCookie","acceptButtonLabel","readMoreButtonLabel","readMoreButtonLink","cookieTextLabel","reverseButtons","borderRadius","justifyContent","maxWidth","buttons","key","classnames","validateReverseButtons","App","ReactDOM","document","getElementById"],"mappings":"44CAKA,IAAMA,EAASC,IAAH,YAgDSC,c,4EACnBC,kBAAS,MAC0BC,KAD1B,MACCC,EADD,QACQC,EADR,gBAGP,OACE,qBAAQC,UAAR,gBAAkCC,QAASF,GACzC,8BAFJ,K,EAJiBJ,CAAqBO,IAAMC,W,2kBChDhD,IAAMV,EAASC,IAAH,OAsCSU,c,4EACnBR,kBAAS,MAC+BC,KAD/B,MACCC,EADD,QACQO,EADR,OACcC,EADd,eAGP,OACE,qBACEN,UADF,mBAEEO,KAFF,EAGEC,OAAQF,EAAe,SAAW,SAJtC,I,EAJiBF,CAAuBF,IAAMC,W,oICtClD,IAAMM,EAAOf,IAAH,SAOWgB,c,4EACnBd,kBACE,OAAO,qBAAMI,UAAU,iB,EAFNU,CAAmBR,IAAMC,W,gKCP9C,IAAMQ,EAAQjB,IAAH,UAaUkB,c,4EACnBhB,kBAAS,IACCE,EAAUD,KADX,YAGP,OAAO,qBAAOG,UAAU,eAAxB,I,EAJiBY,CAAmBV,IAAMC,WCRjCU,EAA8B,SAACC,GAC1C,wBAAWA,EACT,EAGF,aAGWC,EAA6B,SAACD,GACzC,qBAAWA,EAAwB,CACjC,GACEA,gCADF,IAEEA,4BAEA,SAGF,MAAM,IAAIE,MAAV,gGAKF,kCAGWC,EAAuB,SAACH,GACnC,yBAAWA,GACT,GAMSI,EAA0B,SAACJ,GACtC,wBAAWA,EACT,EAGF,kEAWWK,EAAuB,SAACL,GACnC,wBAAWA,EACT,EAGF,IAGWM,EAAyB,SAAC,GAGrC,qBAAWN,EAAwB,CACjC,GAAIA,oBAAJ,kBAAoCA,EAClC,SAGF,MAAM,IAAIE,MAAV,oGAKF,uBAGWK,EAAmB,SAACP,GAC/B,wBAAWA,EACLA,EAAJ,IACE,IAGF,EAGF,K,k4BChEF,IAAMQ,EAAO5B,IAAH,SASJ6B,EAAgB7B,IAAH,SAQb8B,EAAuC9B,IAAH,SAErB,uCAEN,iCAMI,qCAEI,oCAMjB+B,EAAiB/B,IAAH,S,EAyBCgC,YACnB,cAA0B,MACxB,uBAEA,IAAMC,EAAN,SAAoBC,yBAHI,OAKxB,QAAa,CAAEC,eAAgBF,GALP,E,kCAQ1BG,qBACEF,gCAEA/B,KAAA,SAAc,CAAEgC,gBAAgB,K,EAGlCjC,kBAAS,IDrG+BkB,ECqG/B,SAWHjB,KAXG,MAELkC,EAFK,oBAGLC,EAHK,sBAILC,EAJK,qBAKL3B,EALK,eAML4B,EANK,kBAOLC,EAPK,iBAQLC,EARK,eASLC,EATK,iBAULC,EAVK,WAaCT,EAAmBhC,KAbpB,qBAeD0C,EAAU,CACd,qBACEC,IADF,gBAEE1C,ODvHkCgB,ECqHpC,EDpHJ,kBAAWA,EACT,EAGF,UCmHMf,cAAe,kBAAM,EAAN,eAEjB,qBACEyC,IADF,mBAEE1C,MAAOe,EAFT,GAGER,KAAMU,EAHR,GAIET,aAAcW,EAAqBX,MAIvC,OACE,qBACEN,UAAWyC,IAAW,qBAAsB,CAC1C,kBAAmBZ,KAGrB,qBAAe7B,UAAU,mBACvB,qBACEA,UADF,UAEEoC,aAAcjB,EAFhB,GAGEkB,eAAgBjB,EAHlB,GAIEkB,SAAUjB,EAAiBiB,IAE3B,oBANF,MAOE,qBAAYxC,MAAOoB,EAAwBgB,KAC3C,qBAAgBlC,UAAU,mBDhGA,SAACc,GACrC,yBAAWA,GACT,EC+FW4B,IACGH,EADHG,UAhBX,O,EA5CiBhB,CAAqBxB,IAAMC,WCjFjCwC,MAJH,IACH,kBAAC,EAAD,MCETC,IAAShD,OAAO,kBAAC,EAAD,MAASiD,SAASC,eAAe,W","file":"static/js/main.af1e94e7.chunk.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  border-style: none;\n  color: #1d1148;\n  width: 100%;\n  font-size: 16px;\n  background: #ffffff;\n  border-radius: 24px;\n  padding: 12px 24px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 0.5s ease 0s;\n  cursor: pointer;\n\n  &:hover {\n    color: #1d1148;\n    background: #ffffff;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  }\n\n  &:active {\n    box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2),\n      0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  }\n\n  &:focus {\n    outline: 0;\n  }\n\n  &:not(:first-child) {\n    margin-left: 8px;\n  }\n\n  @media (max-width: 768px) {\n    &:not(:first-child) {\n      margin-left: 0;\n    }\n\n    font-size: 12px;\n    margin: 5px 0;\n  }\n`\n\ntype Props = {|\n  label: string,\n  onButtonClick: () => void,\n|}\n\nexport default class AcceptButton extends React.Component<Props> {\n  render() {\n    const { label, onButtonClick } = this.props\n\n    return (\n      <Button className='accept-button' onClick={onButtonClick}>\n        <span>{label}</span>\n      </Button>\n    )\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.a`\n  font-size: 16px;\n  height: auto;\n  color: #8c97a1;\n  padding: 10px 18px;\n  border: 1px solid #e0e2e4;\n  border-radius: 24px;\n  box-shadow: none;\n  text-decoration: none;\n  white-space: nowrap;\n  transition: all 0.5s ease 0s;\n\n  &:hover {\n    color: #1d1148;\n    border-color: #1d1148;\n    background: #ffffff;\n  }\n\n  &:not(:first-child) {\n    margin-left: 8px;\n  }\n\n  @media (max-width: 768px) {\n    &:not(:first-child) {\n      margin-left: 0;\n    }\n\n    font-size: 12px;\n    margin: 5px 0;\n  }\n`\n\ntype Props = {|\n  label: string,\n  link: string,\n  openInNewTab: boolean,\n|}\n\nexport default class ReadMoreButton extends React.Component<Props> {\n  render() {\n    const { label, link, openInNewTab } = this.props\n\n    return (\n      <Button\n        className='read-more-button'\n        href={link}\n        target={openInNewTab ? '_blank' : '_self'}\n      >\n        {label}\n      </Button>\n    )\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Icon = styled.div`\n  &:before {\n    content: 'üç™';\n    font-size: 30px;\n  }\n`\n\nexport default class CookieIcon extends React.Component<{}> {\n  render() {\n    return <Icon className='cookie-icon' />\n  }\n}\n","// @flow\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.span`\n  font-size: 16px;\n  margin: 0 20px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`\n\ntype Props = {|\n  label: string,\n|}\n\nexport default class CookieText extends React.Component<Props> {\n  render() {\n    const { label } = this.props\n\n    return <Label className='cookie-text'>{label}</Label>\n  }\n}\n","/* @flow */\n\nexport const validateAcceptButtonLabel = (parameter: any): string => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return 'Accept'\n}\n\nexport const validateReadMoreButtonLabel = (parameter: any): string => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return 'Read more'\n}\n\nexport const validateReadMoreButtonLink = (parameter: any): string => {\n  if (typeof parameter === 'string') {\n    if (\n      parameter.lastIndexOf('http://', 0) === 0 ||\n      parameter.lastIndexOf('https://', 0) === 0\n    ) {\n      return parameter\n    }\n\n    throw new Error(\n      '[react-cookienotice] readMoreButtonLink parameter should starts with \"http://\" or \"https://\"'\n    )\n  }\n\n  return 'http://aboutcookies.org/'\n}\n\nexport const validateOpenInNewTab = (parameter: any): boolean => {\n  if (typeof parameter === 'boolean') {\n    return parameter\n  }\n\n  return true\n}\n\nexport const validateCookieTextLabel = (parameter: any): string => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return 'This website uses cookies to improve your browsing experience.'\n}\n\nexport const validateReverseButtons = (parameter: any): boolean => {\n  if (typeof parameter === 'boolean') {\n    return parameter\n  }\n\n  return false\n}\n\nexport const validateBorderRadius = (parameter: any): number => {\n  if (typeof parameter === 'number') {\n    return parameter\n  }\n\n  return 32\n}\n\nexport const validateJustifyContent = (\n  parameter: any\n): 'space-around' | 'space-between' => {\n  if (typeof parameter === 'string') {\n    if (parameter === 'space-around' || parameter === 'space-between') {\n      return parameter\n    }\n\n    throw new Error(\n      '[react-cookienotice] Accepted values for justifyContent parameter: space-around or space-between'\n    )\n  }\n\n  return 'space-between'\n}\n\nexport const validateMaxWidth = (parameter: any): number => {\n  if (typeof parameter === 'number') {\n    if (parameter < 400) {\n      return 400\n    }\n\n    return parameter\n  }\n\n  return 1000\n}\n","// @flow\n\nimport React, { type ComponentType } from 'react'\nimport classnames from 'classnames'\nimport styled from 'styled-components'\nimport Cookies from 'js-cookie'\nimport AcceptButton from './AcceptButton'\nimport ReadMoreButton from './ReadMoreButton'\nimport CookieIcon from './CookieIcon'\nimport CookieText from './CookieText'\nimport {\n  validateAcceptButtonLabel,\n  validateReadMoreButtonLabel,\n  validateReadMoreButtonLink,\n  validateOpenInNewTab,\n  validateCookieTextLabel,\n  validateReverseButtons,\n  validateBorderRadius,\n  validateJustifyContent,\n  validateMaxWidth,\n} from '../Validator'\n\ntype WrapperProps = {\n  justifyContent: 'space-around' | 'space-between',\n  maxWidth: number,\n  borderRadius: number,\n}\n\nconst Root = styled.div`\n  opacity: 1;\n  transition: opacity 0.5s linear;\n\n  &.cookies-allowed {\n    opacity: 0;\n  }\n`\n\nconst StickToBottom = styled.div`\n  position: fixed;\n  left: 0px;\n  bottom: 0px;\n  width: 100%;\n  z-index: 1201;\n`\n\nconst Wrapper: ComponentType<WrapperProps> = styled.div`\n  display: flex;\n  justify-content: ${({ justifyContent }) => justifyContent};\n  align-items: center;\n  max-width: ${({ maxWidth }) => maxWidth}px;\n  opacity: 1;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 24px 32px, rgba(0, 0, 0, 0.1) 0px 8px 32px;\n  margin: 0 auto 48px;\n  background: #ffffff;\n  padding: 16px;\n  border-radius: ${({ borderRadius }) => borderRadius}px;\n\n  @media (max-width: ${({ maxWidth }) => maxWidth + 48}px) {\n    margin-left: 48px;\n    margin-right: 48px;\n  }\n`\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\ntype Props = {|\n  acceptButtonLabel?: string,\n  readMoreButtonLabel?: string,\n  readMoreButtonLink?: string,\n  openInNewTab?: boolean,\n  cookieTextLabel?: string,\n  reverseButtons?: boolean,\n  borderRadius?: number,\n  justifyContent?: 'space-around' | 'space-between',\n  maxWidth?: number,\n|}\n\ntype State = {|\n  cookiesAllowed: boolean,\n|}\n\nexport default class CookieNotice extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    const cookieValue = Cookies.get('allow-cookies') === 'true'\n\n    this.state = { cookiesAllowed: cookieValue }\n  }\n\n  setCookie() {\n    Cookies.set('allow-cookies', 'true')\n\n    this.setState({ cookiesAllowed: true })\n  }\n\n  render() {\n    const {\n      acceptButtonLabel,\n      readMoreButtonLabel,\n      readMoreButtonLink,\n      openInNewTab,\n      cookieTextLabel,\n      reverseButtons,\n      borderRadius,\n      justifyContent,\n      maxWidth,\n    } = this.props\n\n    const { cookiesAllowed } = this.state\n\n    const buttons = [\n      <AcceptButton\n        key='accept-button'\n        label={validateAcceptButtonLabel(acceptButtonLabel)}\n        onButtonClick={() => this.setCookie()}\n      />,\n      <ReadMoreButton\n        key='read-more-button'\n        label={validateReadMoreButtonLabel(readMoreButtonLabel)}\n        link={validateReadMoreButtonLink(readMoreButtonLink)}\n        openInNewTab={validateOpenInNewTab(openInNewTab)}\n      />,\n    ]\n\n    return (\n      <Root\n        className={classnames('cookie-notice-root', {\n          'cookies-allowed': cookiesAllowed,\n        })}\n      >\n        <StickToBottom className='stick-to-bottom'>\n          <Wrapper\n            className='wrapper'\n            borderRadius={validateBorderRadius(borderRadius)}\n            justifyContent={validateJustifyContent(justifyContent)}\n            maxWidth={validateMaxWidth(maxWidth)}\n          >\n            <CookieIcon />\n            <CookieText label={validateCookieTextLabel(cookieTextLabel)} />\n            <ButtonsWrapper className='buttons-wrapper'>\n              {validateReverseButtons(reverseButtons)\n                ? buttons.reverse()\n                : buttons}\n            </ButtonsWrapper>\n          </Wrapper>\n        </StickToBottom>\n      </Root>\n    )\n  }\n}\n","import React from 'react'\nimport CookieNotice from 'react-cookienotice'\n\nconst App = () => {\n  return <CookieNotice />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}