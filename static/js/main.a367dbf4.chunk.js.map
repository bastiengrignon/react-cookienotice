{"version":3,"sources":["../../src/Components/Buttons/AcceptButton.js","../../src/Components/Buttons/ReadMoreButton.js","../../src/Components/Buttons/index.js","../../src/Components/Icon.js","../../src/Components/Text.js","../../src/Validator/index.js","../../src/Components/CookieNotice.js","../../src/Helpers/cookies.js","App.js","index.js"],"names":["ButtonStyled","styled","AcceptButton","render","this","label","onButtonClick","darkTheme","className","clsx","dark","onClick","React.createElement","React","ReadMoreButton","link","openInNewTab","href","target","ButtonsWrapperStyled","Buttons","acceptButtonLabel","onAcceptButtonClick","readMoreButtonLabel","readMoreButtonLink","readMoreButtonOpenInNewTab","reverseButtons","buttons","key","StyledIcon","Icon","TextStyled","Text","validateAcceptButtonLabel","parameter","validateReadMoreButtonLabel","validateReadMoreButtonLink","Error","validateReadMoreButtonOpenInNewTab","validateCookieTextLabel","validateReverseButtons","validateBorderRadius","validateJustifyContent","RootStyled","StickToBottomStyled","WrapperStyled","CookieNotice","name","userCookiesAllowed","getCookie","document","parts","v","decodeURIComponent","r","userSetDarkTheme","props","window","cookiesAllowed","setCookie","userCookieExpiration","validateCookieExpiration","path","expires","Date","days","encodeURIComponent","cookieTextLabel","borderRadius","justifyContent","maxWidth","packageJson","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a367dbf4.chunk.js","sourcesContent":["// @flow\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport clsx from 'clsx'\n\nconst ButtonStyled = styled.button`\n  border-style: none;\n  color: #000000;\n  width: 100%;\n  font-size: 16px;\n  background: #ffffff;\n  border-radius: 24px;\n  padding: 12px 24px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 0.5s ease 0s;\n  cursor: pointer;\n\n  &:hover {\n    background: #ffffff;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  }\n\n  &:active {\n    box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2),\n      0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  }\n\n  &:focus {\n    outline: 0;\n  }\n\n  &:not(:first-child) {\n    margin-left: 8px;\n  }\n\n  &.dark {\n    background: #323232;\n    color: #ffffff;\n\n    &:hover {\n      background: #3a3a3a;\n    }\n  }\n\n  @media (max-width: 768px) {\n    &:not(:first-child) {\n      margin-left: 0;\n    }\n\n    font-size: 12px;\n    margin: 5px 0;\n  }\n`\n\ntype Props = {|\n  label: string,\n  onButtonClick: () => void,\n  darkTheme: boolean,\n|}\n\nexport default class AcceptButton extends React.Component<Props> {\n  render(): React.Node {\n    const { label, onButtonClick, darkTheme } = this.props\n\n    return (\n      <ButtonStyled\n        className={clsx('react-cookienotice-accept-button', {\n          dark: darkTheme,\n        })}\n        onClick={onButtonClick}\n      >\n        <span>{label}</span>\n      </ButtonStyled>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport clsx from 'clsx'\n\nconst ButtonStyled = styled.a`\n  font-size: 16px;\n  height: auto;\n  color: #b5b5b5;\n  padding: 10px 18px;\n  border: 1px solid #b5b5b5;\n  border-radius: 24px;\n  box-shadow: none;\n  text-decoration: none;\n  white-space: nowrap;\n  transition: all 0.5s ease 0s;\n\n  &:hover {\n    color: #000000;\n    border-color: #000000;\n  }\n\n  &:not(:first-child) {\n    margin-left: 8px;\n  }\n\n  &.dark {\n    &:hover {\n      color: #ffffff;\n      border-color: #ffffff;\n    }\n  }\n\n  @media (max-width: 768px) {\n    &:not(:first-child) {\n      margin-left: 0;\n    }\n\n    font-size: 12px;\n    margin: 5px 0;\n  }\n`\n\ntype Props = {|\n  label: string,\n  link: string,\n  openInNewTab: boolean,\n  darkTheme: boolean,\n|}\n\nexport default class ReadMoreButton extends React.Component<Props> {\n  render(): React.Node {\n    const { label, link, openInNewTab, darkTheme } = this.props\n\n    return (\n      <ButtonStyled\n        className={clsx('react-cookienotice-read-more-button', {\n          dark: darkTheme,\n        })}\n        href={link}\n        target={openInNewTab ? '_blank' : '_self'}\n      >\n        {label}\n      </ButtonStyled>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport AcceptButton from './AcceptButton'\nimport ReadMoreButton from './ReadMoreButton'\n\nconst ButtonsWrapperStyled = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\ntype Props = {|\n  acceptButtonLabel: string,\n  onAcceptButtonClick: () => void,\n  readMoreButtonLabel: string,\n  readMoreButtonLink: string,\n  readMoreButtonOpenInNewTab: boolean,\n  reverseButtons: boolean,\n  darkTheme: boolean,\n|}\n\nexport default class Buttons extends React.Component<Props> {\n  render(): React.Node {\n    const {\n      acceptButtonLabel,\n      onAcceptButtonClick,\n      readMoreButtonLabel,\n      readMoreButtonLink,\n      readMoreButtonOpenInNewTab,\n      reverseButtons,\n      darkTheme,\n    } = this.props\n\n    const buttons = [\n      <AcceptButton\n        key='accept-button'\n        label={acceptButtonLabel}\n        onButtonClick={onAcceptButtonClick}\n        darkTheme={darkTheme}\n      />,\n      <ReadMoreButton\n        key='read-more-button'\n        label={readMoreButtonLabel}\n        link={readMoreButtonLink}\n        openInNewTab={readMoreButtonOpenInNewTab}\n        darkTheme={darkTheme}\n      />,\n    ]\n\n    return (\n      <ButtonsWrapperStyled className='react-cookienotice-buttons-wrapper'>\n        {reverseButtons ? buttons.reverse() : buttons}\n      </ButtonsWrapperStyled>\n    )\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport styled from 'styled-components'\n\nconst StyledIcon = styled.div`\n  &:before {\n    content: 'üç™';\n    font-size: 30px;\n  }\n`\n\nexport default class Icon extends React.Component<{}> {\n  render(): React.Node {\n    return <StyledIcon className='react-cookienotice-icon' />\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport clsx from 'clsx'\n\nconst TextStyled = styled.span`\n  color: #000000;\n  font-size: 16px;\n  margin: 0 20px;\n\n  &.dark {\n    color: #ffffff;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`\n\ntype Props = {|\n  label: string,\n  darkTheme: boolean,\n|}\n\nexport default class Text extends React.Component<Props> {\n  render(): React.Node {\n    const { label, darkTheme } = this.props\n\n    return (\n      <TextStyled\n        className={clsx('react-cookienotice-text', { dark: darkTheme })}\n      >\n        {label}\n      </TextStyled>\n    )\n  }\n}\n","// @flow\n\nexport const validateAcceptButtonLabel = (parameter?: any): string => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return 'Accept'\n}\n\nexport const validateReadMoreButtonLabel = (parameter?: any): string => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return 'Read more'\n}\n\nexport const validateReadMoreButtonLink = (parameter?: any): string => {\n  if (typeof parameter === 'string') {\n    if (\n      parameter.lastIndexOf('http://', 0) === 0 ||\n      parameter.lastIndexOf('https://', 0) === 0\n    ) {\n      return parameter\n    }\n\n    throw new Error(\n      '[react-cookienotice] readMoreButtonLink parameter should starts with \"http://\" or \"https://\"'\n    )\n  }\n\n  return 'http://aboutcookies.org/'\n}\n\nexport const validateReadMoreButtonOpenInNewTab = (\n  parameter?: any\n): boolean => {\n  if (typeof parameter === 'boolean') {\n    return parameter\n  }\n\n  return true\n}\n\nexport const validateCookieTextLabel = (parameter?: any): string => {\n  if (typeof parameter === 'string') {\n    return parameter\n  }\n\n  return 'This website uses cookies to improve your browsing experience.'\n}\n\nexport const validateReverseButtons = (parameter?: any): boolean => {\n  if (typeof parameter === 'boolean') {\n    return parameter\n  }\n\n  return false\n}\n\nexport const validateBorderRadius = (parameter?: any): number => {\n  if (typeof parameter === 'number') {\n    if (parameter >= 0) {\n      return parameter\n    }\n\n    throw new Error(\n      '[react-cookienotice] borderRadius parameter should not be negative'\n    )\n  }\n\n  return 32\n}\n\nexport const validateJustifyContent = (\n  parameter?: any\n): 'space-around' | 'space-between' => {\n  if (typeof parameter === 'string') {\n    if (parameter === 'space-around' || parameter === 'space-between') {\n      return parameter\n    }\n\n    throw new Error(\n      '[react-cookienotice] Accepted values for justifyContent parameter: space-around or space-between'\n    )\n  }\n\n  return 'space-between'\n}\n\nexport const validateMaxWidth = (parameter?: any): number => {\n  if (typeof parameter === 'number') {\n    if (parameter < 400) {\n      return 400\n    }\n\n    return parameter\n  }\n\n  return 1000\n}\n\nexport const validateCookieExpiration = (parameter?: any): number => {\n  if (typeof parameter === 'number') {\n    if (parameter > 0) {\n      return parameter\n    }\n\n    throw new Error(\n      '[react-cookienotice] cookieExpiration parameter should be more than 0 day'\n    )\n  }\n\n  return 30\n}\n\nexport const validateDarkTheme = (parameter?: any): boolean => {\n  if (typeof parameter === 'boolean') {\n    return parameter\n  }\n\n  return window.matchMedia('(prefers-color-scheme: dark)').matches\n}\n","// @flow\n\nimport * as React from 'react'\nimport clsx from 'clsx'\nimport styled from 'styled-components'\nimport Buttons from './Buttons'\nimport Icon from './Icon'\nimport Text from './Text'\nimport {\n  validateAcceptButtonLabel,\n  validateReadMoreButtonLabel,\n  validateReadMoreButtonLink,\n  validateReadMoreButtonOpenInNewTab,\n  validateCookieTextLabel,\n  validateReverseButtons,\n  validateBorderRadius,\n  validateJustifyContent,\n  validateMaxWidth,\n  validateCookieExpiration,\n  validateDarkTheme,\n} from '../Validator/index'\nimport { getCookie, setCookie } from '../Helpers/cookies'\nimport packageJson from '../../package.json'\n\ntype WrapperProps = {\n  justifyContent: 'space-around' | 'space-between',\n  maxWidth: number,\n  borderRadius: number,\n}\n\nconst RootStyled = styled.div`\n  opacity: 1;\n  transition: opacity 0.5s linear;\n\n  &.cookies-allowed {\n    opacity: 0;\n  }\n`\n\nconst StickToBottomStyled = styled.div`\n  position: fixed;\n  left: 0px;\n  bottom: 0px;\n  width: 100%;\n  z-index: 1201;\n`\n\nconst WrapperStyled: React.ComponentType<WrapperProps> = styled.div`\n  display: flex;\n  justify-content: ${({ justifyContent }) => justifyContent};\n  align-items: center;\n  max-width: ${({ maxWidth }) => maxWidth}px;\n  opacity: 1;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 24px 32px, rgba(0, 0, 0, 0.1) 0px 8px 32px;\n  margin: 0 auto 48px;\n  background: #ffffff;\n  padding: 16px;\n  border-radius: ${({ borderRadius }) => borderRadius}px;\n\n  &.dark {\n    background: #3a3a3a;\n  }\n\n  @media (max-width: ${({ maxWidth }) => maxWidth + 48}px) {\n    margin-left: 48px;\n    margin-right: 48px;\n  }\n`\n\ntype Props = {|\n  acceptButtonLabel?: string,\n  readMoreButtonLabel?: string,\n  readMoreButtonLink?: string,\n  openInNewTab?: boolean,\n  cookieTextLabel?: string,\n  reverseButtons?: boolean,\n  borderRadius?: number,\n  justifyContent?: 'space-around' | 'space-between',\n  maxWidth?: number,\n  cookieExpiration?: number,\n  darkTheme?: boolean,\n|}\n\ntype State = {|\n  cookiesAllowed: boolean,\n  darkTheme: boolean,\n|}\n\nexport default class CookieNotice extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    const userCookiesAllowed = getCookie('allow-cookies') === 'true'\n    const userSetDarkTheme = validateDarkTheme(props.darkTheme)\n\n    this.state = {\n      cookiesAllowed: userCookiesAllowed,\n      darkTheme: userSetDarkTheme,\n    }\n  }\n\n  setCookie(): void {\n    const { cookieExpiration } = this.props\n\n    const userCookieExpiration = validateCookieExpiration(cookieExpiration)\n\n    this.setState({ cookiesAllowed: true }, () => {\n      setCookie('allow-cookies', 'true', userCookieExpiration)\n    })\n  }\n\n  render(): React.Node {\n    const {\n      acceptButtonLabel,\n      readMoreButtonLabel,\n      readMoreButtonLink,\n      openInNewTab,\n      cookieTextLabel,\n      reverseButtons,\n      borderRadius,\n      justifyContent,\n      maxWidth,\n    } = this.props\n\n    const { cookiesAllowed, darkTheme } = this.state\n\n    return (\n      <RootStyled\n        className={clsx(\n          `react-cookienotice-root version-${packageJson.version}`,\n          {\n            'cookies-allowed': cookiesAllowed,\n          }\n        )}\n      >\n        <StickToBottomStyled className='react-cookienotice-stick-to-bottom'>\n          <WrapperStyled\n            className={clsx('react-cookienotice-wrapper', {\n              dark: darkTheme,\n            })}\n            borderRadius={validateBorderRadius(borderRadius)}\n            justifyContent={validateJustifyContent(justifyContent)}\n            maxWidth={validateMaxWidth(maxWidth)}\n          >\n            <Icon />\n            <Text\n              label={validateCookieTextLabel(cookieTextLabel)}\n              darkTheme={darkTheme}\n            />\n            <Buttons\n              acceptButtonLabel={validateAcceptButtonLabel(acceptButtonLabel)}\n              onAcceptButtonClick={() => this.setCookie()}\n              readMoreButtonLabel={validateReadMoreButtonLabel(\n                readMoreButtonLabel\n              )}\n              readMoreButtonLink={validateReadMoreButtonLink(\n                readMoreButtonLink\n              )}\n              readMoreButtonOpenInNewTab={validateReadMoreButtonOpenInNewTab(\n                openInNewTab\n              )}\n              reverseButtons={validateReverseButtons(reverseButtons)}\n              darkTheme={darkTheme}\n            />\n          </WrapperStyled>\n        </StickToBottomStyled>\n      </RootStyled>\n    )\n  }\n}\n","// @flow\n\nexport const setCookie = (\n  name: string,\n  value: string,\n  days: number,\n  path?: string = '/'\n): void => {\n  const expires = new Date(Date.now() + days * 864e5).toUTCString()\n\n  document.cookie =\n    name +\n    '=' +\n    encodeURIComponent(value) +\n    '; expires=' +\n    expires +\n    '; path=' +\n    path\n}\n\nexport const getCookie = (name: string): string | null => {\n  return document.cookie.split('; ').reduce((r, v) => {\n    const parts = v.split('=')\n\n    return parts[0] === name ? decodeURIComponent(parts[1]) : r\n  }, null)\n}\n\nexport const deleteCookie = (name: string, path: string): void => {\n  setCookie(name, '', -1, path)\n}\n","import * as React from 'react'\nimport CookieNotice from 'react-cookienotice'\n\nconst App = () => {\n  return <CookieNotice />\n}\n\nexport default App\n","import * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}